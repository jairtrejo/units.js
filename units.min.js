(function(a){var e={};var c={kg:{base:"kg",mu:1},lb:{base:"kg",mu:0.454},m:{base:"m",mu:1},ft:{base:"m",mu:0.3048},m2:{base:"m2",mu:1},ft2:{base:"m2",mu:0.3048*0.3048},month:{base:"month",mu:1},year:{base:"month",mu:12},mxn:{base:"usd",mu:1/14},usd:{base:"usd",mu:1}};(function(){var h={};for(var g in c){if(c.hasOwnProperty(g)){var i=c[g];h["_"+g]={base:"_"+i.base,mu:1/i.mu}}}for(var g in h){if(h.hasOwnProperty(g)){c[g]=h[g]}}}());var b=function(g){return g.split("-")};var d=e.convert=function(h,m,n){var l=h;var p=b(m);var g=b(n);if(g.length!=p.length){throw new Error("convert(val, from, to): The number of to and from units doesn't match.")}for(var k=0;k<p.length;++k){var o=p[k],j=g[k];if(!c.hasOwnProperty(o)){throw new Error("convert(val, from, to): unit "+o+" not found.")}if(!c.hasOwnProperty(j)){throw new Error("convert(val, from, to): unit "+j+" not found.")}if(c[o].base!==c[j].base){throw new Error("convert(val, from, to): Bases don't match for units "+o+" and "+j+".")}l*=c[o].mu/c[j].mu}return l};var f=e.define=function(h,g,i){if(isNaN(i-i)){throw new Error("define(symbol, base_unit, multiplier): multiplier is not numeric.")}c[h]={base:g,mu:i};c["_"+h]={base:"_"+g,mu:1/i}};a.units=e}(this));